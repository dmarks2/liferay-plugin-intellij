{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://liferay.com/liferay-extension-types.json",
  "title": "JS Import Maps Entry Client Extension",
  "definitions": {
    "AssembleItem": {
      "properties": {
        "from": {
          "type": "string"
        },
        "into": {
          "type": "string"
        }
      }
    },
    "JSImportMapsEntry": {
      "title": "Javascript Import Map Entry",
      "description": "JavaScript import map entry client extensions make JavaScript code or resources available to any page rendered in a Liferay instance. When you must include JavaScript code or resources from multiple locations, you can bundle them in one client extension in your Liferay workspace.\n\nDefine and export code in the client extension with a specifier that the import map in Liferay provides to anything that imports it. For example, you can bundle a library like jQuery into the client extension, and then import it into a fragment’s code to use it.",
      "x-intellij-html-description": "JavaScript import map entry client extensions make JavaScript code or resources available to any page rendered in a Liferay instance. When you must include JavaScript code or resources from multiple locations, you can bundle them in one client extension in your Liferay workspace.\n\nDefine and export code in the client extension with a specifier that the <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap'>import map</a> in Liferay provides to anything that imports it. For example, you can bundle a library like <a href='https://jquery.com/'>jQuery</a> into the client extension, and then import it into a fragment’s code to use it. See <a href='https://learn.liferay.com/w/dxp/liferay-development/customizing-liferays-look-and-feel/bundling-resources-in-a-javascript-import-map-entry-client-extension#bundling-resources-in-a-javascript-import-map-entry-client-extension'>Bundling Resources in a JavaScript Import Map Entry Client Extension</a> for more information...",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Defines the type of the client extension",
          "enum": [
            "batch",
            "customElement",
            "editorConfigContributor",
            "fdsCellRenderer",
            "fdsFilter",
            "globalCSS",
            "globalJS",
            "iframe",
            "instanceSettings",
            "jsImportMapsEntry",
            "notificationType",
            "oAuthApplicationHeadlessServer",
            "oAuthApplicationUserAgent",
            "objectAction",
            "objectValidationRule",
            "siteInitializer",
            "staticContent",
            "themeCSS",
            "themeFavicon",
            "themeJS",
            "themeSpritemap",
            "workflowAction"
          ],
          "x-intellij-enum-metadata": {
            "batch": {
              "description": "Batch"
            },
            "customElement": {
              "description": "Custom Element"
            },
            "editorConfigContributor": {
              "description": "Editor Config Contributor"
            },
            "fdsCellRenderer": {
              "description": "Frontend data set cell renderer"
            },
            "fdsFilter": {
              "description": "Frontend Data Set Filter"
            },
            "globalCSS": {
              "description": "Global CSS"
            },
            "globalJS": {
              "description": "Global JS"
            },
            "iframe": {
              "description": "IFrame"
            },
            "instanceSettings": {
              "description": "Instance Settings"
            },
            "jsImportMapsEntry": {
              "description": "JS Importmaps Entry"
            },
            "notificationType": {
              "description": "Notification Type"
            },
            "oAuthApplicationHeadlessServer": {
              "description": "OAuth Headless Server"
            },
            "oAuthApplicationUserAgent": {
              "description": "OAuth User Agent"
            },
            "objectAction": {
              "description": "Object Action"
            },
            "objectValidationRule": {
              "description": "Object Validation Rule"
            },
            "siteInitializer": {
              "description": "Site Initializer"
            },
            "staticContent": {
              "description": "Static content"
            },
            "themeCSS": {
              "description": "Theme CSS"
            },
            "themeFavicon": {
              "description": "Theme Favicon"
            },
            "themeJS": {
              "description": "Theme JS"
            },
            "themeSpritemap": {
              "description": "Theme Sprite Map"
            },
            "workflowAction": {
              "description": "Workflow Action"
            }
          }
        },
        "baseURL": {
          "type": "string",
          "description": "The base path from which all of the client extension’s defined resources are served."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The client extension’s name (as it appears in the UI). A name is required for front-end client extensions."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "The client extension’s description."
        },
        "sourceCodeURL": {
          "type": "string",
          "default": "https://www.liferay.com",
          "title": "Source Code URL",
          "description": "The address to the client extension’s source repository."
        },
        "bareSpecifier": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "title": "URL"
        }
      },
      "required": [
        "type",
        "name"
      ],
      "additionalProperties": true
    }
  },
  "type": "object",
  "properties": {
    "assemble": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssembleItem"
      }
    }
  },
  "additionalProperties": {
    "pattern": "(\\w|\\-)+",
    "type": "object",
    "$ref": "#/definitions/JSImportMapsEntry"
  }
}
